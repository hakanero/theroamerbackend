/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as ElevenLabs from "../index";
export type WorkflowExpressionConditionModelExpression = ElevenLabs.WorkflowExpressionConditionModelExpression.AndOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.BooleanLiteral | ElevenLabs.WorkflowExpressionConditionModelExpression.DynamicVariable | ElevenLabs.WorkflowExpressionConditionModelExpression.EqOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.GtOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.GteOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.Llm | ElevenLabs.WorkflowExpressionConditionModelExpression.LtOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.LteOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.NeqOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.NumberLiteral | ElevenLabs.WorkflowExpressionConditionModelExpression.OrOperator | ElevenLabs.WorkflowExpressionConditionModelExpression.StringLiteral;
export declare namespace WorkflowExpressionConditionModelExpression {
    interface AndOperator extends ElevenLabs.AstAndOperatorNode {
        type: "and_operator";
    }
    interface BooleanLiteral extends ElevenLabs.AstBooleanNode {
        type: "boolean_literal";
    }
    interface DynamicVariable extends ElevenLabs.AstDynamicVariableNode {
        type: "dynamic_variable";
    }
    interface EqOperator extends ElevenLabs.AstEqualsOperatorNode {
        type: "eq_operator";
    }
    interface GtOperator extends ElevenLabs.AstGreaterThanOperatorNode {
        type: "gt_operator";
    }
    interface GteOperator extends ElevenLabs.AstGreaterThanOrEqualsOperatorNode {
        type: "gte_operator";
    }
    interface Llm extends ElevenLabs.AstllmNode {
        type: "llm";
    }
    interface LtOperator extends ElevenLabs.AstLessThanOperatorNode {
        type: "lt_operator";
    }
    interface LteOperator extends ElevenLabs.AstLessThanOrEqualsOperatorNode {
        type: "lte_operator";
    }
    interface NeqOperator extends ElevenLabs.AstNotEqualsOperatorNode {
        type: "neq_operator";
    }
    interface NumberLiteral extends ElevenLabs.AstNumberNode {
        type: "number_literal";
    }
    interface OrOperator extends ElevenLabs.AstOrOperatorNode {
        type: "or_operator";
    }
    interface StringLiteral extends ElevenLabs.AstStringNode {
        type: "string_literal";
    }
}
